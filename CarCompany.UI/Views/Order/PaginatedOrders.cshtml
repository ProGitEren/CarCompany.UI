@using Infrastucture.Helpers
@using System.Security.Claims
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using static Infrastructure.Models.Enums.OrderEnums
@model Pagination<OrderViewModel>


@{
    ViewData["Title"] = "Orders";
    var SelectVehicleIdList = (ViewData["VehicleIdList"] as string).Split(",").ToList();
    var BuyerList = Model.Data.Select(x => x.BuyerEmail);
    var SellerList = Model.Data.Select(x => x.SellerEmail);
    var orderStatusList = Enum.GetValues(typeof(OrderStatus)).Cast<OrderStatus>().ToDictionary(v => v, v => v.ToString());
    var orderTypeList = Enum.GetValues(typeof(OrderType)).Cast<OrderType>().ToDictionary(v => v, v => v.ToString());
    var paymentMethodList = Enum.GetValues(typeof(PaymentMethod)).Cast<PaymentMethod>().ToDictionary(v => v, v => v.ToString());
    
}

<br>
<br>

<div style="display: flex; align-items: center; justify-content: space-between; margin: 10px; position: relative;">
    <h2 class="title-section" style="margin: 0 auto;">Orders</h2>
    @if (User.IsInRole("Seller"))
    {
        <a asp-controller="Vehicle" asp-action="UserVehicles" class="btn btn-primary text-dark" style="position: absolute; right: 0;background-color:cornflowerblue;">
            <i class="bi bi-person-plus"></i> &nbsp; New Order 
        </a>
    }
</div>
<hr />

<div asp-validation-summary="All" class="text-danger"></div>

<form method="get" asp-action="PaginatedOrders">

    <div class="row mb-5">
        <input hidden asp-for="PageSize" />
       
        <!-- Search Input -->
        <div class="col-md-4">
            <input type="search" name="searchInput" class="form-control bg-dark" placeholder="Search" />
        </div>

        <!-- Sorting Dropdown -->
        <div class="col-md-3">
            <select name="sortOptions" class="form-select bg-dark">
                <option value="">Sort by...</option>
                <option value="PriceAsc">Price: Low to High</option>
                <option value="PriceDesc">Price: High to Low</option>
                <option value="VehicleAsc">Vehicle Id: First to Last</option>
                <option value="VehicleDesc">Vehicle Id: Last to First</option>
                <option value="OrderDateAsc">Order Date: Oldest to Newest</option>
                <option value="OrderDateDesc">Order Date: Newest to Oldest</option>
                <option value="OrderType">Order Type</option>
                <option value="OrderStatus">Order Status</option>
                <option value="SellerEmailAsc">Seller Email: First to Last</option>
                <option value="SellerEmailDesc">Seller Email: Last to First </option>

            </select>
        </div>

        <!-- Filter Dropdown Menu -->
        <div class="col-md-4">
            <div class="dropdown">
                <button class="btn bg-dark dropdown-toggle w-100" type="button" id="filterDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="bi bi-filter-left"></i> Filter
                </button>
                <ul class="dropdown-menu w-100" aria-labelledby="filterDropdown">
                    <li>
                        <select name="filterVehicleId" asp-items="@(new SelectList(SelectVehicleIdList))" class="form-select bg-dark">
                            <option value="">Vehicle ID...</option>
                        </select>
                    </li>
                    <li>
                        <select name="sellerEmail" asp-items="@(new SelectList(SellerList))" class="form-select bg-dark">
                            <option value="">Seller Email...</option>
                        </select>
                    </li>
                    <li>
                        <select name="buyerEmail" asp-items="@(new SelectList(BuyerList))" class="form-select bg-dark">
                            <option value="">Buyer Email...</option>
                        </select>
                    </li>
                    <li>
                        <select name="orderStatus" asp-items="@(new SelectList(orderStatusList))" class="form-select bg-dark">
                            <option value="">Order Status...</option>
                        </select>

                    </li>
                    <li>
                        <select name="orderType" asp-items="@(new SelectList(orderTypeList))" class="form-select bg-dark">
                            <option value="">Order Type...</option>
                        </select>
                    </li>
                    <li>
                        <select name="paymentMethod" asp-items="@(new SelectList(paymentMethodList))" class="form-select bg-dark">
                            <option value="">Payment Method...</option>
                        </select>
                    </li>

                </ul>
            </div>
        </div>


        <!-- Submit Button -->
        <div class="col-md-1">
            <button type="submit" class="btn bg-dark">Apply</button>
        </div>
        
    </div>
</form>


<div class="row">
    @foreach (var order in Model.Data)
    {
         

        <div class="col-md-6 mb-4 d-flex">

            <div class="card bg-dark text-white border border-5">
                <div class="card-header text-center @GetCardHeaderClass(order.OrderStatus)">
                    <h3 class="title-section text-dark text-bo mb-0">@order.OrderStatus</h3>
                    @if (order.OrderStatus == OrderStatus.Sold)
                    {
                        <p class="card-text mt-2 mb-0" style="color:lightgrey"><em>@order.BuyerEmail</em></p>
                    }
                </div>
                <div class="card-body">
                    <div class="card-item d-flex justify-content-between">
                        <span class="card-label text-warning">Seller:</span>
                        <span class="card-value">@order.SellerEmail</span>
                    </div>
                    <hr class="border-secondary">
                    <div class="card-item d-flex justify-content-between">
                        <span class="card-label text-warning">Order Date:</span>
                        <span class="card-value">@order.OrderedDate?.ToString("MM/dd/yyyy")</span>
                    </div>
                    <hr class="border-secondary">
                    <div class="card-item d-flex justify-content-between">
                        <span class="card-label text-warning">Order Type:</span>
                        <span class="card-value">@order.OrderType</span>
                    </div>
                    <hr class="border-secondary">
                    <div class="card-item d-flex justify-content-between">
                        <span class="card-label text-warning">Payment Method:</span>
                        <span class="card-value">@order.PaymentMethod</span>
                    </div>
                </div>

                
                <div class="card-footer d-flex justify-content-center">
                    
                        <a class="btn btn-outline-dark mx-1" asp-controller="OrderVehicle" asp-action="Details" asp-route-id="@order.OrderVehicleId">
                            <i class="bi bi-images"></i> Vehicle
                        </a>
                        @if (User.IsInRole("Seller") && User.Claims.Where(x => x.Type == ClaimTypes.Name).FirstOrDefault()?.Value == order.SellerEmail)
                        {
                            <a type="button" class="btn btn-outline-success mx-1" data-bs-toggle="modal" data-bs-target="#confirmStatusChangeModal" data-order-id="@order.Id">
                                <i class="bi bi-pencil"></i> Mark as Sold
                            </a>
                        
                            <a class="btn btn-outline-info mx-1" asp-controller="Order" asp-action="Update" asp-route-id="@order.Id">
                                <i class="bi bi-pencil"></i> Edit
                            </a>
                            <a class="btn btn-outline-danger mx-1" asp-controller="Order" asp-action="Delete" asp-route-id="@order.Id">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        }
                        @if (User.IsInRole("Buyer"))

                        {
                            <a class="btn btn-outline-transparent mx-1" asp-controller="Order" asp-action="Details" asp-route-id="@order.Id">
                                <i class="bi bi-pencil"></i> Details
                            </a>
                        }

                </div>
            </div>
        </div>
    }
    <partial name="_MarkSoldPopUp"/>
</div>

<div class="d-flex justify-content-center mt-4">
    @if (Model.TotalCount != 0)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination bg-dark">
                @if (Model.PageNumber != 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="PaginatedOrders" asp-route-PageNumber="@(Model.PageNumber - 1)"
                           asp-route-PageSize="@(Model.PageSize)"
                           asp-route-sortoptions="@ViewData["sortoptions"]"
                           asp-route-searchInput="@ViewData["searchInput"]"
                           asp-route-filterVehicleId="@ViewData["filterVehicleId"]"
                           asp-route-sellerEmail="@ViewData["sellerEmail"]"
                           asp-route-buyerEmail="@ViewData["buyerEmail"]"
                           asp-route-orderType="@ViewData["orderType"]"
                           asp-route-orderStatus="@ViewData["orderStatus"]"
                           asp-route-paymentMethod="@ViewData["paymentMethod"]"
                        >Previous</a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalCount / Model.PageSize + 1; i++)
                {
                    <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                        <a class="page-link" asp-action="PaginatedOrders" asp-route-PageNumber="@i"
                           asp-route-PageSize="@(Model.PageSize)"
                           asp-route-sortoptions="@ViewData["sortoptions"]"
                           asp-route-searchInput="@ViewData["searchInput"]"
                           asp-route-filterVehicleId="@ViewData["filterVehicleId"]"
                           asp-route-sellerEmail="@ViewData["sellerEmail"]"
                           asp-route-buyerEmail="@ViewData["buyerEmail"]"
                           asp-route-orderType="@ViewData["orderType"]"
                           asp-route-orderStatus="@ViewData["orderStatus"]"
                           asp-route-paymentMethod="@ViewData["paymentMethod"]">@i</a>
                    </li>
                }

                @if (Model.PageNumber < Model.TotalCount / Model.PageSize + 1)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="PaginatedOrders" asp-route-PageNumber="@(Model.PageNumber + 1)"
                           asp-route-PageSize="@(Model.PageSize)"
                           asp-route-sortoptions="@ViewData["sortoptions"]"
                           asp-route-searchInput="@ViewData["searchInput"]"
                           asp-route-filterVehicleId="@ViewData["filterVehicleId"]"
                           asp-route-sellerEmail="@ViewData["sellerEmail"]"
                           asp-route-buyerEmail="@ViewData["buyerEmail"]"
                           asp-route-orderType="@ViewData["orderType"]"
                           asp-route-orderStatus="@ViewData["orderStatus"]"
                           asp-route-paymentMethod="@ViewData["paymentMethod"]">Next</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>
</div>

<div class="d-flex justify-content-center mt-2">
    <span></span>
    <ul class="pagination bg-dark ms-2">
        <li class="page-item @(Model.PageSize == 5 ? "active" : "")">
            <a class="page-link" asp-action="PaginatedOrders" asp-route-PageNumber="1"
               asp-route-PageSize="5"
               asp-route-sortoptions="@ViewData["sortoptions"]"
               asp-route-searchInput="@ViewData["searchInput"]"
               asp-route-filterVehicleId="@ViewData["filterVehicleId"]"
               asp-route-sellerEmail="@ViewData["sellerEmail"]"
               asp-route-buyerEmail="@ViewData["buyerEmail"]"
               asp-route-orderType="@ViewData["orderType"]"
               asp-route-orderStatus="@ViewData["orderStatus"]"
               asp-route-paymentMethod="@ViewData["paymentMethod"]">1-5</a>
        </li>
        <li class="page-item @(Model.PageSize == 10 ? "active " : "")">
            <a class="page-link" asp-action="PaginatedOrders" asp-route-PageNumber="1"
               asp-route-PageSize="10"
               asp-route-sortoptions="@ViewData["sortoptions"]"
               asp-route-searchInput="@ViewData["searchInput"]"
               asp-route-filterVehicleId="@ViewData["filterVehicleId"]"
               asp-route-sellerEmail="@ViewData["sellerEmail"]"
               asp-route-buyerEmail="@ViewData["buyerEmail"]"
               asp-route-orderType="@ViewData["orderType"]"
               asp-route-orderStatus="@ViewData["orderStatus"]"
               asp-route-paymentMethod="@ViewData["paymentMethod"]">1-10</a>
        </li>
        <li class="page-item  @(Model.PageSize == 25 ? "active " : "")">
            <a class="page-link" asp-action="PaginatedOrders" asp-route-PageNumber="1"
               asp-route-PageSize="25"
               asp-route-sortoptions="@ViewData["sortoptions"]"
               asp-route-searchInput="@ViewData["searchInput"]"
               asp-route-filterVehicleId="@ViewData["filterVehicleId"]"
               asp-route-sellerEmail="@ViewData["sellerEmail"]"
               asp-route-buyerEmail="@ViewData["buyerEmail"]"
               asp-route-orderType="@ViewData["orderType"]"
               asp-route-orderStatus="@ViewData["orderStatus"]"
               asp-route-paymentMethod="@ViewData["paymentMethod"]">1-25</a>
        </li>

    </ul>
</div>


<div class="container">
    <a class="btn btn-secondary mt-4" asp-controller="Home" asp-action="Index">Back to Home Page</a>
</div>


@functions {
    public string GetCardHeaderClass(OrderStatus status)
    {
        return status switch
        {
            OrderStatus.Active => "bg-success text-white",
            OrderStatus.Sold => "bg-danger text-white",
            OrderStatus.NotActive => "bg-secondary text-white",
            _ => "bg-dark text-white"
        };
    }
}



